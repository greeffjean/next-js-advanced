import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { locales, isValidLocale } from "@/i18n/settings";
import { getDictionary } from "@/i18n/get-dictionary";
import LanguageSwitcher from "@/components/molecules/LanguageSwitcher/LanguageSwitcher";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export function generateStaticParams() {
  return locales.map((locale) => ({ lang: locale }));
}

export async function generateMetadata({
  params,
}: {
  params: { lang: string };
}): Promise<Metadata> {
  const { lang } = await params;

  return {
    title: "Create Next App",
    description: "Generated by create next app",
    other: {
      lang: lang,
    },
  };
}

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ lang: string }>;
  }) {
  const { lang } = await params;
  const locale = isValidLocale(lang) ? lang : 'en';
  const dict = await getDictionary(locale);

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-50`}
      >
        <nav className="flex gap-4 p-4 border-b border-gray-200">
          <Link href={`/${locale}`}>{dict.navigation.home}</Link>
          <Link href={`/${locale}/dashboard`}>{dict.navigation.dashboard}</Link>
          <Link href={`/${locale}/dashboard/settings`}>{dict.navigation.settings}</Link>
          <Link href={`/${locale}/dashboard/analytics`}>{dict.navigation.analytics}</Link>
          <Link href={`/${locale}/dashboard/feed`}>{dict.navigation.feed}</Link>
          
          {/* Language Switcher */}
          <LanguageSwitcher />
        </nav>
        {children}
      </body>
    </html>
  );
}
